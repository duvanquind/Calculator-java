# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: agent-cristian-1
  vmImage: agent-test-1

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: CmdLine@2
  inputs:
    script: java --version
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'AzureStorage'
    azureStorageAccountName: 'cristiancontainer'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonar_Duvan_Code'
    organization: 'quind'
    scannerMode: 'Other'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'build'
    spotBugsAnalysis: false
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
- task: sonarcloud-buildbreaker@2
  inputs:
    SonarCloud: 'Sonar_Duvan_Code'
    organization: 'quind'
- task: CopyFiles@2
  inputs:
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'build/libs/'
    ArtifactName: 'drop'
    publishLocation: 'Container'